
















======================






setup stuff is below the "==========="

until then, ill explain the folder structure:

numbered folders are for some example games.
or actually perhaps, serious prototypes.
a clumsy game-to-compile selection is currently done via Choose_Game.h

inside amaneshi is the actual engine:
	debug contains testing/debug 
	external contains interfaces to anything handled in another library
	system contains internal code that isn't game-agnostic (e.g. threading)

	There is a "*" named folder related to every Game_*.hpp header.
	Implementations and convenient configurations all go in there

	The Engine_*.hpp headers are convenient includes to tie everything together.
	if this became serious business i'd end up with Engine_PlatformName.hpp
	of course if i haven't moved back to unreal/unity by then, something's wrong :P

	---Ideally, you just include Engine_Standard.hpp in the game---

======================

I hooked up glew and glfw in visual studio 2017
https://www.youtube.com/watch?v=gCkcP0GcCe0

but the visual studio project files remember. as long as they didnt get gitignored ahem

got glew, got glfw, 
put in folder called external
right click project name in project explorer
properties
go into c/c++ section, general and add additional include directories
go into linker, general, add additional library dirs
linker, input, additional dependencies
opengl32.lib
glew32.lib
glfw3.lib

trying the static version of glew for some reason results in errors
unresolved external symbols. and LNK4098
OH this might be because we dumped the glew32.dll everywhere
because this error could occur due to using both static and dynamic

Severity	Code	Description	Project	File	Line	Suppression State
Warning	LNK4098	defaultlib 'MSVCRT' conflicts with use of other libs; use /NODEFAULTLIB:library	amaneshi  etc etc etc hi there\amaneshi\LINK	1	

actually also because using with glfw which is dynamic. ok. 

not certain yet. should research more.

did it for 32 bit
you redo it for 64 bit i guess. 

 the ide is basically doing the same as your previous makefiles
 you just have to navigate different menus. look up guides, whatever it takes.
 
visual studio 2017 freezes while debugging!
https://developercommunity.visualstudio.com/content/problem/26358/vs-2017-stops-responding-freezes-locks-up.html
fixed doing this.. but might need them back eventually..

